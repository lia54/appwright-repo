import { ChatCompletionStreamParams } from 'openai/lib/ChatCompletionStream';
import { ApiClientInterface } from '../_types/generalTypes';
import { ApiResource } from '../apiResource';
import { RequestOptions } from '../baseClient';
import { ChatCompletionFunctionRunnerParams, ChatCompletionToolRunnerParams } from 'openai/lib/ChatCompletionRunner';
import { ChatCompletionStreamingFunctionRunnerParams, ChatCompletionStreamingToolRunnerParams } from 'openai/lib/ChatCompletionStreamingRunner';
import { ChatCompletionParseParams } from 'openai/resources/beta/chat/completions';
export declare class BetaChat extends ApiResource {
    completions: Completions;
    constructor(client: any);
}
export declare class Completions extends ApiResource {
    parse<Params extends ChatCompletionParseParams>(_body: Params, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    runFunctions<FunctionsArgs extends BaseFunctionsArgs>(body: ChatCompletionFunctionRunnerParams<FunctionsArgs>, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    runFunctions<FunctionsArgs extends BaseFunctionsArgs>(body: ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs>, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    runTools<FunctionsArgs extends BaseFunctionsArgs>(body: ChatCompletionToolRunnerParams<FunctionsArgs>, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    runTools<FunctionsArgs extends BaseFunctionsArgs>(body: ChatCompletionStreamingToolRunnerParams<FunctionsArgs>, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    stream(_body: ChatCompletionStreamParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
}
export type BaseFunctionsArgs = readonly (object | string)[];
