"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHeaders = void 0;
const utils_1 = require("../utils.js");
const createHeaders = (config) => {
    const headers = {};
    let forwardHeaders = [];
    if (config['forwardHeaders']) {
        // logic to convert forwardHeaders values to kebab-case
        forwardHeaders = config['forwardHeaders'].map((header) => {
            return header
                .replace('ID', 'Id')
                .replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);
        });
    }
    for (let k in config) {
        let v = config[k];
        if ((0, utils_1.isEmpty)(v))
            continue;
        // convert to snakecase
        if (k.toLocaleLowerCase() === 'authorization') {
            headers[k.toLowerCase()] = v || '';
            continue;
        }
        // false logic (type is boolean, to handle flasy logic)
        if (typeof v === 'boolean') {
            v = v.toString();
        }
        // logic to handle forwardHeaders into a comma separated string
        if (k === 'forwardHeaders') {
            v = v.join(',');
        }
        k = k
            .replace('ID', 'Id')
            .replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`);
        if (!(0, utils_1.isEmpty)(v) && typeof v == 'object') {
            v = JSON.stringify(v);
        }
        if (forwardHeaders && forwardHeaders.includes(k)) {
            headers[k] = v || '';
        }
        else {
            headers[(0, utils_1.getPortkeyHeader)(k)] = v || '';
        }
    }
    return headers;
};
exports.createHeaders = createHeaders;
//# sourceMappingURL=createHeaders.js.map