import { APIResponseType, ApiClientInterface } from '../_types/generalTypes';
import { ApiResource } from '../apiResource';
import { APIPromise, RequestOptions } from '../baseClient';
import { Stream } from '../streaming';
export declare class postMethod extends ApiResource {
    create(url: string, _body: PostBodyNonStreaming, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<PostResponse>;
    create(url: string, _body: PostBodyStreaming, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<Stream<PostResponse>>;
    create(url: string, _body: PostBodyParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<Stream<PostResponse>> | APIPromise<PostResponse>;
}
export type PostResponse = Record<string, any> & APIResponseType;
export interface PostBodyStreaming extends Record<string, any> {
    stream?: true;
}
export interface PostBodyNonStreaming extends Record<string, any> {
    stream?: false;
}
export type PostBodyParams = PostBodyNonStreaming | PostBodyStreaming;
