import { ApiResource } from '../apiResource';
import { APIResponseType, ApiClientInterface } from '../_types/generalTypes';
import { APIPromise, RequestOptions } from '../baseClient';
export interface UsersGetParams {
    userId?: string;
}
export interface UsersGetResponse extends APIResponseType {
    object?: string;
    id?: string;
    first_name?: string;
    last_name?: string;
    role?: string;
    email?: string;
    created_at?: Date;
    last_updated_at?: Date;
    workspace_ids?: string[];
}
export interface UsersListParams {
    pageSize?: number | string;
    currentPage?: number;
    email?: string;
    role?: 'admin' | 'member' | 'owner' | any;
}
export interface UsersListResponse extends APIResponseType {
    total?: number;
    object?: string;
    data?: UsersGetResponse[];
}
export interface UsersUpdateParams {
    userId?: string;
    role?: 'admin' | 'member' | any;
}
export interface UsersDeleteParams {
    userId?: string;
}
export interface UserInviteParams {
    email?: string;
    role?: string;
    workspaces?: Record<string, any>[];
    workspace_api_key_details?: Record<string, any>;
}
export interface UserInviteResponse extends APIResponseType {
    id?: string;
    invite_link?: string;
}
export interface UserInviteGetParams {
    inviteId?: string;
}
export interface UserInviteGetResponse extends APIResponseType {
    object?: string;
    id?: string;
    email?: string;
    role?: 'admin' | 'member' | any;
    created_at?: Date;
    expires_at?: Date;
    accepted_at?: Date | null;
    status?: string;
    invited_by?: string;
}
export interface UserInviteListParams {
    email?: string;
    role?: 'admin' | 'member' | any;
    status?: 'pending' | 'accepted' | 'expired' | 'cancelled' | any;
    pageSize?: number;
    currentPage?: number;
}
export interface UserInviteListResponse extends APIResponseType {
    object?: string;
    total?: number;
    data?: UserInviteGetResponse[];
}
export interface UserInviteDeleteParams {
    inviteId?: string;
}
export interface WorkspacesAddParams {
    name?: string;
    description?: string;
    defaults?: Record<string, any>;
    users?: string[];
}
export interface WorkspacesAddResponse extends APIResponseType {
    id?: string;
    slug?: string;
    name?: string;
    description?: string;
    created_at?: Date;
    last_updated_at?: Date;
    defaults?: Record<string, any>;
    users?: Record<string, string>[];
    object?: string;
}
export interface WorkspacesGetParams {
    workspaceId?: string;
}
export interface WorkspacesGetResponse extends APIResponseType {
    id?: string;
    slug?: string;
    name?: string;
    description?: string;
    created_at?: Date;
    last_updated_at?: Date;
    defaults?: Record<string, any> | null;
    users?: Record<string, any>[];
}
export interface WorkspacesListParams {
    page_size?: number;
    current_page?: number;
}
export interface WorkspacesListResponse extends APIResponseType {
    total?: number;
    object?: string;
    data?: WorkspacesGetResponse[];
}
export interface WorkspacesUpdateParams {
    workspaceId?: string;
    name?: string;
    description?: string;
    defaults?: Record<string, any>;
}
export interface WorkspacesUpdateResponse extends APIResponseType {
    id?: string;
    slug?: string;
    name?: string;
    description?: string;
    created_at?: Date;
    is_default?: number;
    last_updated_at?: Date;
    defaults?: Record<string, any>;
    object?: string;
}
export interface WorkspacesDeleteParams {
    workspaceId?: string;
    name?: string;
}
export interface WorkspaceMemberAddParams {
    workspaceId?: string;
    users?: {
        id: string;
        role: 'member' | 'admin';
    }[];
}
export interface WorkspaceMemberGetParams {
    workspaceId?: string;
    userId?: string;
}
export interface WorkspaceMemberGetResponse extends APIResponseType {
    first_name?: string;
    last_name?: string;
    org_role?: string;
    role?: string;
    created_at?: Date;
    last_updated_at?: Date;
    status?: string;
    workspace_id?: string;
    scopes?: string[];
    settings?: Record<string, any> | null;
    object?: string;
}
export interface WorkspaceMemberListParams {
    workspaceId?: string;
    page_size?: number;
    current_page?: number;
    email?: string;
    role?: 'admin' | 'manager' | 'member' | any;
}
export interface WorkspaceMemberListResponse extends APIResponseType {
    total?: number;
    object?: string;
    data?: WorkspaceMemberGetResponse[];
}
export interface WorkspaceMemberDeleteParams {
    workspaceId?: string;
    userId?: string;
}
export interface WorkspaceMemberUpdateParams {
    workspaceId?: string;
    userId?: string;
    role?: 'admin' | 'member' | any;
}
export declare class Admin extends ApiResource {
    users: Users;
    workspaces: Workspaces;
    constructor(client: any);
}
export declare class Users extends ApiResource {
    invites: Invites;
    retrieve(_body: UsersGetParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<UsersGetResponse>;
    list(_body: UsersListParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<UsersListResponse>;
    update(_body: UsersUpdateParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    delete(_body: UsersDeleteParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
export declare class Invites extends ApiResource {
    create(_body: UserInviteParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<UserInviteResponse>;
    retrieve(_body: UserInviteGetParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<UserInviteGetResponse>;
    list(_body?: UserInviteListParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<UserInviteListResponse>;
    delete(_body: UserInviteDeleteParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    resend(_body: UserInviteGetParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
export declare class Workspaces extends ApiResource {
    users: Member;
    create(_body: WorkspacesAddParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspacesAddResponse>;
    retrieve(_body: WorkspacesGetParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspacesGetResponse>;
    list(_body: WorkspacesListParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspacesListResponse>;
    update(_body: WorkspacesUpdateParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspacesUpdateResponse>;
    delete(_body: WorkspacesDeleteParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
export declare class Member extends ApiResource {
    create(_body: WorkspaceMemberAddParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    retrieve(_body: WorkspaceMemberGetParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspaceMemberGetResponse>;
    list(_body: WorkspaceMemberListParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<WorkspaceMemberListResponse>;
    delete(_body: WorkspaceMemberDeleteParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    update(_body: WorkspaceMemberUpdateParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
