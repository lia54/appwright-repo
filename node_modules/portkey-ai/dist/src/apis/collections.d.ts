import { ApiClientInterface } from '../_types/generalTypes';
import { ApiResource } from '../apiResource';
import { APIPromise, RequestOptions } from '../baseClient';
export interface CollectionBody {
    name: string;
    workspace_id?: string;
    parent_collection_id?: string;
}
export interface CollectionsListQuery {
    workspace_id?: string;
    current_page?: number;
    page_size?: number;
    search?: string;
}
export declare class Collections extends ApiResource {
    create(_body: CollectionBody, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    list(_query?: CollectionsListQuery, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    retrieve(collectionId: string, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    update(collectionId: string, body: {
        name?: string;
    }, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
    delete(collectionId: string, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
