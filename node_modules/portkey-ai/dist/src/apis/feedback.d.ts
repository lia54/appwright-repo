import { APIResponseType, ApiClientInterface } from '../_types/generalTypes';
import { ApiResource } from '../apiResource';
import { APIPromise, RequestOptions } from '../baseClient';
interface FeedbackBodyBase {
    traceID?: string;
    feedbackID?: string;
    value?: number;
    weight?: number;
    metadata?: Record<string, any>;
}
type FeedbackBody = FeedbackBodyBase | Array<FeedbackBodyBase>;
export interface FeedbackResponse extends APIResponseType {
    status: string;
    message: string;
    feedback_id: Array<string>;
}
export declare class Feedback extends ApiResource {
    create(_body: FeedbackBody, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<FeedbackResponse>;
    update(_body: FeedbackBodyBase, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<FeedbackResponse>;
}
export {};
