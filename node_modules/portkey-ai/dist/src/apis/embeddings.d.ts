import { APIResponseType, ApiClientInterface } from '../_types/generalTypes';
import { ModelParams } from '../_types/portkeyConstructs';
import { ApiResource } from '../apiResource';
import { APIPromise, RequestOptions } from '../baseClient';
export interface EmbeddingsBody extends ModelParams {
    input: string | number | (string | number)[] | (string | number)[][];
    model?: string;
    dimensions?: number;
    encoding_format?: string;
}
export interface EmbeddingArr {
    embedding?: Array<number>;
    index?: number;
    object?: string;
    [key: string]: any;
}
export interface Usage {
    prompt_tokens?: number;
    total_tokens?: number;
    [key: string]: any;
}
interface EmbeddingsResponse extends APIResponseType {
    data?: Array<EmbeddingArr>;
    model?: string;
    object?: string;
    usage?: Usage;
    [key: string]: any;
}
export declare class Embeddings extends ApiResource {
    create(_body: EmbeddingsBody, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<EmbeddingsResponse>;
}
export {};
