import { Client as WebDriverClient } from "webdriver";
import { ElementReference, ScrollDirection, TimeoutOptions, ActionOptions } from "../types";
export declare class Locator {
    private webDriverClient;
    private timeoutOpts;
    private selector;
    private findStrategy;
    private textToMatch?;
    constructor(webDriverClient: WebDriverClient, timeoutOpts: TimeoutOptions, selector: string, findStrategy: string, textToMatch?: (string | RegExp) | undefined);
    fill(value: string, options?: ActionOptions): Promise<void>;
    sendKeyStrokes(value: string, options?: ActionOptions): Promise<void>;
    isVisible(options?: ActionOptions): Promise<boolean>;
    waitFor(state: "attached" | "visible", options?: ActionOptions): Promise<void>;
    private waitUntil;
    tap(options?: ActionOptions): Promise<void>;
    getText(options?: ActionOptions): Promise<string>;
    scroll(direction: ScrollDirection): Promise<void>;
    /**
     * Retrieves the element reference based on the `selector`.
     *
     * @returns
     */
    getElement(): Promise<ElementReference | null>;
}
//# sourceMappingURL=index.d.ts.map