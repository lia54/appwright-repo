import { JobCreateParams, JobListEventsParams, JobListParams } from 'openai/resources/fine-tuning/jobs/jobs';
import { ApiClientInterface } from '../_types/generalTypes';
import { ApiResource } from '../apiResource';
import { RequestOptions } from '../baseClient';
import { CheckpointListParams } from 'openai/resources/fine-tuning/jobs/checkpoints';
import { PermissionCreateParams, PermissionRetrieveParams } from 'openai/resources/fine-tuning/checkpoints/permissions';
import { GraderRunParams, GraderValidateParams } from 'openai/resources/fine-tuning/alpha/graders';
export declare class FineTuning extends ApiResource {
    jobs: Jobs;
    checkpoints: FineTuningCheckpoints;
    alpha: Alpha;
    constructor(client: any);
}
export declare class Jobs extends ApiResource {
    checkpoints: Checkpoints;
    constructor(client: any);
    create(_body: JobCreateBody, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    retrieve(fineTuningJobId: string, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    list(_query?: JobListParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    cancel(fineTuningJobId: string, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    listEvents(fineTuningJobId: string, _query?: JobListEventsParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
}
export declare class Checkpoints extends ApiResource {
    list(fineTuningJobId: string, _query?: CheckpointListParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
}
export declare class Alpha extends ApiResource {
    grader: Grader;
    constructor(client: any);
}
export declare class Grader extends ApiResource {
    run(body: GraderRunParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    validate(body: GraderValidateParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
}
export interface JobCreateBody extends JobCreateParams {
    role_arn: string;
    job_name: string;
    output_file: string;
    provider_options: Record<string, any>;
    portkey_options: Record<string, any>;
    [key: string]: any;
}
export declare class FineTuningCheckpoints extends ApiResource {
    permissions: Permissions;
    constructor(client: any);
}
export declare class Permissions extends ApiResource {
    create(fineTunedModelCheckpoint: string, body: PermissionCreateParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    retrieve(fineTunedModelCheckpoint: string, query?: PermissionRetrieveParams, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
    del(fineTunedModelCheckpoint: string, permissionId: string, params?: ApiClientInterface, opts?: RequestOptions): Promise<any>;
}
