type TestInWorkerInfo = {
    title: string;
    startTime: string;
};
export type WorkerInfo = {
    idx: number;
    sessionId?: string | undefined;
    providerName?: string | undefined;
    startTime?: {
        beforeAppiumSession: string;
        afterAppiumSession: string;
    } | undefined;
    endTime?: string | undefined;
    tests: TestInWorkerInfo[];
};
export declare class WorkerInfoStore {
    private basePath;
    constructor();
    saveWorkerToDisk(idx: number, contents: WorkerInfo): Promise<void>;
    getWorkerFromDisk(idx: number): Promise<WorkerInfo | undefined>;
    getWorkerStartTime(idx: number): Promise<Date>;
    saveWorkerStartTime(idx: number, sessionId: string, providerName: string, beforeAppiumSession: Date, afterAppiumSession: Date): Promise<void>;
    saveWorkerEndTime(idx: number, endTime: Date): Promise<void>;
    saveTestStartTime(idx: number, testTitle: string, startTime: Date): Promise<void>;
}
export {};
//# sourceMappingURL=workerInfo.d.ts.map