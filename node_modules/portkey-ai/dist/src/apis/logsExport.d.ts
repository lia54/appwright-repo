import { ApiResource } from '../apiResource';
import { APIResponseType, ApiClientInterface } from '../_types/generalTypes';
import { APIPromise, RequestOptions } from '../baseClient';
export interface LogsExportCreateParams {
    filters?: Record<string, any>;
    workspaceId?: string;
    description?: string;
    requestedData?: string[];
}
export interface LogsExportCreateResponse extends APIResponseType {
    id?: string;
    total?: number;
    object?: string;
}
export interface LogsExportListParams {
    workspaceId?: string;
}
export interface LogsExportListResponse extends APIResponseType {
    object?: string;
    total?: number;
    data?: Record<string, any>[];
}
export interface LogsExportUpdateParams {
    exportId?: string;
    workspaceId?: string;
    filters?: Record<string, any>;
    requestedData?: string[];
}
export interface LogsExportUpdateResponse extends APIResponseType {
    id?: string;
    total?: number;
    object?: string;
}
export interface LogsExportCancelParams {
    exportId?: string;
}
export interface LogsExportCancelResponse extends APIResponseType {
    message?: string;
    object?: string;
}
export interface LogsExportRetrieveParams {
    exportId: string;
}
export interface LogsExportRetrieveResponse extends APIResponseType {
    id?: string;
    organisation_id?: string;
    filters?: Record<string, any>;
    requested_data?: string[];
    status?: string;
    description?: string;
    created_at?: Date;
    last_updated_at?: Date;
    created_by?: string;
    workspace_id?: string;
    total_records?: number;
    object?: string;
}
export interface LogsExportStartParams {
    exportId?: string;
}
export interface LogsExportStartResponse extends APIResponseType {
    message?: string;
    object?: string;
}
export interface LogsExportDownloadParams {
    exportId?: string;
}
export interface LogsExportDownloadResponse extends APIResponseType {
    signed_url?: string;
}
export interface LogInsertBody {
    request?: Record<string, any>;
    response?: Record<string, any>;
    metadata?: Record<string, any>;
}
export declare class Logs extends ApiResource {
    exports: Exports;
    constructor(client: any);
    create(_body: LogInsertBody, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<any>;
}
export declare class Exports extends ApiResource {
    create(_body: LogsExportCreateParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportCreateResponse>;
    retrieve(_body: LogsExportRetrieveParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportRetrieveResponse>;
    list(_body: LogsExportListParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportListResponse>;
    update(_body: LogsExportUpdateParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportUpdateResponse>;
    start(_body: LogsExportStartParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportStartResponse>;
    cancel(_body: LogsExportCancelParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportCancelResponse>;
    download(_body: LogsExportDownloadParams, params?: ApiClientInterface, opts?: RequestOptions): APIPromise<LogsExportDownloadResponse>;
}
